-- MySQL Script generated by MySQL Workbench
-- Thu Jan  5 18:33:14 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema hanga
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema hanga
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `hanga` DEFAULT CHARACTER SET utf8mb4 ;
USE `hanga` ;

-- -----------------------------------------------------
-- Table `hanga`.`carritoCompra`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `hanga`.`carritoCompra` (
  `id_carritoCompra` INT NOT NULL AUTO_INCREMENT,
  `agregarProducto` VARCHAR(45) NOT NULL,
  `vaciarCarrito` VARCHAR(45) NULL,
  `usuario` VARCHAR(45) NOT NULL,
  `cantidadProducto` TINYINT(20) NOT NULL,
  `producto` VARCHAR(45) NULL,
  `carritoCompracol` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_carritoCompra`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `hanga`.`pedidos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `hanga`.`pedidos` (
  `id_pedidos` INT NOT NULL AUTO_INCREMENT,
  `fechaCompra` DATETIME NOT NULL,
  `direccionEntrega` VARCHAR(45) NOT NULL,
  `recargoEnvio` FLOAT NULL,
  `descuento` FLOAT NULL,
  `totalPago` FLOAT NOT NULL,
  `altaPedido` DATETIME NOT NULL,
  `verPedido` LONGBLOB NOT NULL,
  `modificarPedido` VARCHAR(45) NULL,
  `eliminarPedido` VARCHAR(45) NULL,
  `producto` VARCHAR(45) NOT NULL,
  `carritoCompra_id_carritoCompra` INT NOT NULL,
  PRIMARY KEY (`id_pedidos`, `carritoCompra_id_carritoCompra`),
  INDEX `fk_pedidos_carritoCompra1_idx` (`carritoCompra_id_carritoCompra` ASC),
  CONSTRAINT `fk_pedidos_carritoCompra1`
    FOREIGN KEY (`carritoCompra_id_carritoCompra`)
    REFERENCES `hanga`.`carritoCompra` (`id_carritoCompra`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `hanga`.`ventas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `hanga`.`ventas` (
  `id_ventas` INT NOT NULL AUTO_INCREMENT,
  `producto` VARCHAR(45) NOT NULL,
  `medioDePago` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_ventas`),
  CONSTRAINT `fk_ventas_pedidos1`
    FOREIGN KEY (`id_ventas`)
    REFERENCES `hanga`.`pedidos` (`fechaCompra`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `hanga`.`rol`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `hanga`.`rol` (
  `id_rol` INT NOT NULL AUTO_INCREMENT,
  `cliente` VARCHAR(45) NOT NULL,
  `proveedor` VARCHAR(45) NOT NULL,
  `administrador` VARCHAR(45) NOT NULL,
  `vendedor` VARCHAR(45) NOT NULL,
  `usuario` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_rol`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `hanga`.`usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `hanga`.`usuarios` (
  `id_usuarios` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(20) NOT NULL,
  `apellido` VARCHAR(20) NOT NULL,
  `dni` VARCHAR(10) NOT NULL,
  `direccion` VARCHAR(45) NOT NULL,
  `ciudad` VARCHAR(45) NOT NULL,
  `pais` VARCHAR(45) NOT NULL,
  `celular` FLOAT NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `image` LONGBLOB NOT NULL,
  `rol` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `ventas_id_ventas` INT NOT NULL,
  `rol_id_rol` INT NOT NULL,
  PRIMARY KEY (`id_usuarios`, `ventas_id_ventas`, `rol_id_rol`),
  INDEX `fk_usuarios_ventas_idx` (`ventas_id_ventas` ASC),
  INDEX `fk_usuarios_rol1_idx` (`rol_id_rol` ASC),
  CONSTRAINT `fk_usuarios_ventas`
    FOREIGN KEY (`ventas_id_ventas`)
    REFERENCES `hanga`.`ventas` (`id_ventas`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuarios_rol1`
    FOREIGN KEY (`rol_id_rol`)
    REFERENCES `hanga`.`rol` (`id_rol`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `hanga`.`producto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `hanga`.`producto` (
  `id_producto` INT NOT NULL AUTO_INCREMENT,
  `articuloproducto` VARCHAR(20) NOT NULL,
  `descripcion` VARCHAR(45) NOT NULL,
  `image` LONGBLOB NULL,
  `precio` FLOAT NOT NULL,
  `altaProducto` DATE NULL,
  `modificarProducto` DATE NULL,
  `eliminarProducto` DATE NULL,
  `listarProducto` VARCHAR(45) NOT NULL,
  `usuarios_id_usuarios` INT NOT NULL,
  `usuarios_ventas_id_ventas` INT NOT NULL,
  PRIMARY KEY (`id_producto`),
  INDEX `fk_producto_usuarios1_idx` (`usuarios_id_usuarios` ASC, `usuarios_ventas_id_ventas` ASC),
  CONSTRAINT `fk_producto_usuarios1`
    FOREIGN KEY (`usuarios_id_usuarios` , `usuarios_ventas_id_ventas`)
    REFERENCES `hanga`.`usuarios` (`id_usuarios` , `ventas_id_ventas`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `hanga`.`medioDePago`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `hanga`.`medioDePago` (
  `id_medioDePago` INT NOT NULL AUTO_INCREMENT,
  `tarjetaDeCredito` TINYINT(30) NOT NULL,
  `efectivo` TINYINT(30) NOT NULL,
  `transferenciaBanco` TINYINT(30) NOT NULL,
  `billetera` TINYINT(30) NOT NULL,
  `meli` TINYINT(30) NOT NULL,
  `ventas_id_ventas` INT NOT NULL,
  PRIMARY KEY (`id_medioDePago`),
  INDEX `fk_medioDePago_ventas1_idx` (`ventas_id_ventas` ASC),
  CONSTRAINT `fk_medioDePago_ventas1`
    FOREIGN KEY (`ventas_id_ventas`)
    REFERENCES `hanga`.`ventas` (`id_ventas`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
